/* SmartWizard 2.0 plugin
 * jQuery Wizard control Plugin
 * http://www.techlaboratory.net/smartwizard
 *
 * by Dipu Raj
 * http://dipuraj.me
 *
 * License
 * https://github.com/techlab/SmartWizard/blob/master/MIT-LICENSE.txt
 */
 /* SmartWizard 2.0 plugin
 * jQuery Wizard control Plugin
 * http://www.techlaboratory.net/smartwizard
 *
 * by Dipu Raj
 * http://dipuraj.me
 *
 * License
 * https://github.com/techlab/SmartWizard/blob/master/MIT-LICENSE.txt
 *
 */
(function($) {
    $.fn.smartWizard = function(action) {
        var options = $.extend({}, $.fn.smartWizard.defaults, action);
        var args = arguments;

        return this.each(function() {
            var obj = $(this);
            var curStepIdx = options.selected;
            var steps = $("ul > li > a[href^='#step-']", obj); // Get all anchors in this array
            var contentWidth = 0;
            var loader, msgBox, elmActionBar, elmStepContainer, btNext, btPrevious, btFinish;

            elmActionBar = $('.actionBar', obj);
            if (elmActionBar.length == 0) {
                elmActionBar = $('<div></div>').addClass("actionBar");
            }

            msgBox = $('.msgBox', obj);
            if (msgBox.length == 0) {
                msgBox = $('<div class="msgBox"><div class="content"></div><a href="#" class="close">X</a></div>');
                elmActionBar.append(msgBox);
            }

            $('.close', msgBox).click(function() {
                msgBox.fadeOut("normal");
                return false;
            });


            // Method calling logic
            if (!action || action === 'init' || typeof action === 'object') {
                init();
            } else if (action === 'showMessage') {
                //showMessage(Array.prototype.slice.call( args, 1 ));
                var ar = Array.prototype.slice.call(args, 1);
                showMessage(ar[0]);
                return true;
            } else if (action === 'setError') {
                var ar = Array.prototype.slice.call(args, 1);
                setError(ar[0].stepnum, ar[0].iserror);
                return true;
            } else {
                $.error('Method ' + action + ' does not exist');
            }

            function init() {
                var allDivs = obj.children('div'); //$("div", obj);
                obj.children('ul').addClass("anchor");
                allDivs.addClass("content");
                // Create Elements
                loader = $('<div>Loading</div>').addClass("loader");
                elmActionBar = $('<div></div>').addClass("actionBar");
                elmStepContainer = $('<div></div>').addClass("stepContainer");
                //btNext = $('<a>' + options.labelNext + '</a>').attr("href", "#").addClass(" btn btn-default pull-right");
                //btPrevious = $('<a>' + options.labelPrevious + '</a>').attr("href", "#").addClass("btn btn-default pull-left");
                //btFinish = $('<a>' + options.labelFinish + '</a>').attr("href", "#").addClass("btn btn-default pull-right");

                // highlight steps with errors
                if (options.errorSteps && options.errorSteps.length > 0) {
                    $.each(options.errorSteps, function(i, n) {
                        setError(n, true);
                    });
                }


                elmStepContainer.append(allDivs);
                elmActionBar.append(loader);
                obj.append(elmStepContainer);
                obj.append(elmActionBar);
                if (options.includeFinishButton) {
                    elmActionBar.append(btFinish);
                }
                elmActionBar.append(btNext).append(btPrevious);
                contentWidth = elmStepContainer.width();

                $(btNext).click(function() {
                    if ($(this).hasClass('buttonDisabled')) {
                        return false;
                    }
                    doForwardProgress();
                    return false;
                });
                $(".action-btn-wizard-next").click(function() {
                    if ($(this).hasClass('buttonDisabled')) {
                        return false;
                    }
                    doForwardProgress();
                    return false;
                });


                $(btPrevious).click(function() {
                  if ($(this).hasClass('buttonDisabled')) {
                      return false;
                  }
                  doBackwardProgress();
                  return false;
                });

                $(".action-btn-wizard-previous").click(function() {
                  if ($(this).hasClass('buttonDisabled')) {
                      return false;
                  }
                  doBackwardProgress();
                  return false;
                });

                $(btFinish).click(function() {
                    if (!$(this).hasClass('buttonDisabled')) {
                        if ($.isFunction(options.onFinish)) {
                            if (!options.onFinish.call(this, $(steps))) {
                                return false;
                            }
                        } else {
                            var frm = obj.parents('form');
                            if (frm && frm.length) {
                                frm.submit();
                            }
                        }
                    }

                    return false;
                });

                $(steps).bind("click", function(e) {
                    if (steps.index(this) == curStepIdx) {
                        return false;
                    }
                    var nextStepIdx = steps.index(this);
                    var isDone = steps.eq(nextStepIdx).attr("isDone") - 0;
                    if (isDone == 1) {
                        LoadContent(nextStepIdx);
                    }
                    return false;
                });

                // Enable keyboard navigation
                if (options.keyNavigation) {
                    $(document).keyup(function(e) {
                        if (e.which == 39) { // Right Arrow
                            doForwardProgress();
                        } else if (e.which == 37) { // Left Arrow
                            doBackwardProgress();
                        }
                    });
                }
                //  Prepare the steps
                prepareSteps();
                // Show the first slected step
                LoadContent(curStepIdx);
            }

            function prepareSteps() {
                if (!options.enableAllSteps) {
                    $(steps, obj).removeClass("selected").removeClass("done").addClass("disabled");
                    $(steps, obj).attr("isDone", 0);
                } else {
                    $(steps, obj).removeClass("selected").removeClass("disabled").addClass("done");
                    $(steps, obj).attr("isDone", 1);
                }

                $(steps, obj).each(function(i) {
                    $($(this).attr("href"), obj).hide();
                    $(this).attr("rel", i + 1);
                });
            }

            function LoadContent(stepIdx) {
                var selStep = steps.eq(stepIdx);
                var ajaxurl = options.contentURL;
                var hasContent = selStep.data('hasContent');
                stepNum = stepIdx + 1;
                if (ajaxurl && ajaxurl.length > 0) {
                    if (options.contentCache && hasContent) {
                        showStep(stepIdx);
                    } else {
                        $.ajax({
                            url: ajaxurl,
                            type: "POST",
                            data: ({
                                step_number: stepNum
                            }),
                            dataType: "text",
                            beforeSend: function() {
                                loader.show();
                            },
                            error: function() {
                                loader.hide();
                            },
                            success: function(res) {
                                loader.hide();
                                if (res && res.length > 0) {
                                    selStep.data('hasContent', true);
                                    $($(selStep, obj).attr("href"), obj).html(res);
                                    showStep(stepIdx);
                                }
                            }
                        });
                    }
                } else {
                    showStep(stepIdx);
                }
            }

            function showStep(stepIdx) {
                var selStep = steps.eq(stepIdx);
                var curStep = steps.eq(curStepIdx);
                if (stepIdx != curStepIdx) {
                    if ($.isFunction(options.onLeaveStep)) {
                        if (!options.onLeaveStep.call(this, $(curStep))) {
                            return false;
                        }
                    }
                }
                if (options.updateHeight)
                    elmStepContainer.height($($(selStep, obj).attr("href"), obj).outerHeight());
                if (options.transitionEffect == 'slide') {
                    $($(curStep, obj).attr("href"), obj).slideUp("fast", function(e) {
                        $($(selStep, obj).attr("href"), obj).slideDown("fast");
                        curStepIdx = stepIdx;
                        SetupStep(curStep, selStep);
                    });
                } else if (options.transitionEffect == 'fade') {
                    $($(curStep, obj).attr("href"), obj).fadeOut("fast", function(e) {
                        $($(selStep, obj).attr("href"), obj).fadeIn("fast");
                        curStepIdx = stepIdx;
                        SetupStep(curStep, selStep);
                    });
                } else if (options.transitionEffect == 'slideleft') {
                    var nextElmLeft = 0;
                    var curElementLeft = 0;
                    if (stepIdx > curStepIdx) {
                        nextElmLeft1 = contentWidth + 10;
                        nextElmLeft2 = 0;
                        curElementLeft = 0 - $($(curStep, obj).attr("href"), obj).outerWidth();
                    } else {
                        nextElmLeft1 = 0 - $($(selStep, obj).attr("href"), obj).outerWidth() + 20;
                        nextElmLeft2 = 0;
                        curElementLeft = 10 + $($(curStep, obj).attr("href"), obj).outerWidth();
                    }
                    if (stepIdx == curStepIdx) {
                        nextElmLeft1 = $($(selStep, obj).attr("href"), obj).outerWidth() + 20;
                        nextElmLeft2 = 0;
                        curElementLeft = 0 - $($(curStep, obj).attr("href"), obj).outerWidth();
                    } else {
                        $($(curStep, obj).attr("href"), obj).animate({
                            left: curElementLeft
                        }, "fast", function(e) {
                            $($(curStep, obj).attr("href"), obj).hide();
                        });
                    }

                    $($(selStep, obj).attr("href"), obj).css("left", nextElmLeft1);
                    $($(selStep, obj).attr("href"), obj).show();
                    $($(selStep, obj).attr("href"), obj).animate({
                        left: nextElmLeft2
                    }, "fast", function(e) {
                        curStepIdx = stepIdx;
                        SetupStep(curStep, selStep);
                    });
                } else {
                    $($(curStep, obj).attr("href"), obj).hide();
                    $($(selStep, obj).attr("href"), obj).show();
                    curStepIdx = stepIdx;
                    SetupStep(curStep, selStep);
                }
                return true;
            }

            function SetupStep(curStep, selStep) {
                $(curStep, obj).removeClass("selected");
                $(curStep, obj).addClass("done");

                $(selStep, obj).removeClass("disabled");
                $(selStep, obj).removeClass("done");
                $(selStep, obj).addClass("selected");
                $(selStep, obj).attr("isDone", 1);
                adjustButton();
                if ($.isFunction(options.onShowStep)) {
                    if (!options.onShowStep.call(this, $(selStep))) {
                        return false;
                    }
                }
            }

            function doForwardProgress() {
                var nextStepIdx = curStepIdx + 1;
                if (steps.length <= nextStepIdx) {
                    if (!options.cycleSteps) {
                        return false;
                    }
                    nextStepIdx = 0;
                }
                LoadContent(nextStepIdx);
            }

            function doBackwardProgress() {
                var nextStepIdx = curStepIdx - 1;
                if (0 > nextStepIdx) {
                    if (!options.cycleSteps) {
                        return false;
                    }
                    nextStepIdx = steps.length - 1;
                }
                LoadContent(nextStepIdx);
            }

            function adjustButton() {
                if (!options.cycleSteps) {
                    if (0 >= curStepIdx) {
                        $(btPrevious).addClass("buttonDisabled");
                    } else {
                        $(btPrevious).removeClass("buttonDisabled");
                    }
                    if ((steps.length - 1) <= curStepIdx ) {
                        $(btNext).addClass("buttonDisabled");
                    } else {
                        $(btNext).removeClass("buttonDisabled");
                    }
                }
                // Finish Button
                if (!steps.hasClass('disabled') || options.enableFinishButton) {
                    $(btFinish).removeClass("buttonDisabled");
                } else {
                    $(btFinish).addClass("buttonDisabled");
                }

                //  // Previous Button
                // if (options.enableFPriviousButton) {
                //     $(btPrevious).removeClass("buttonDisabled");
                // } else {
                //     $(btPrevious).addClass("buttonDisabled");
                // }


            }

            function showMessage(msg) {
                $('.content', msgBox).html(msg);
                msgBox.show();
            }

            function setError(stepnum, iserror) {
                if (iserror) {
                    $(steps.eq(stepnum - 1), obj).addClass('error')
                } else {
                    $(steps.eq(stepnum - 1), obj).removeClass("error");
                }
            }
        });
    };

    // Default Properties and Events
    $.fn.smartWizard.defaults = {

        selected: 0, // Selected Step, 0 = first step
        keyNavigation: true, // Enable/Disable key navigation(left and right keys are used if enabled)
        enableAllSteps: false,
        updateHeight: true,
        transitionEffect: 'fade', // Effect on navigation, none/fade/slide/slideleft
        contentURL: null, // content url, Enables Ajax content loading
        contentCache: true, // cache step contents, if false content is fetched always from ajax url
        cycleSteps: false, // cycle step navigation
        includeFinishButton: true, // whether to show a Finish button
        enableFinishButton: false, // make finish button enabled always
        //enablePriviousButton: false,
        errorSteps: [], // Array Steps with errors
        labelNext: 'Next',
        labelPrevious: 'Previous',
        labelFinish: 'Finish',
        onLeaveStep: null, // triggers when leaving a step
        onShowStep: null, // triggers when showing a step
        onFinish: null // triggers when Finish button is clicked
    };

})(jQuery);








/*---------------------------------*/

// (function(a) {
//     a.fn.smartWizard = function(m) {
//         var c = a.extend({}, a.fn.smartWizard.defaults, m),
//             x = arguments;
//         return this.each(function() {
//             function C() {
//                 var e = b.children("div");
//                 b.children("ul").addClass("anchor");
//                 e.addClass("content");
//                 n = a("<div>Loading</div>").addClass("loader");
//                 k = a("<div></div>").addClass("actionBar");
//                 p = a("<div></div>").addClass("stepContainer");
//                 q = a("<a>" + c.labelNext + "</a>").attr("href", "#").addClass("btn btn-default pull-right");
//                 r = a("<a>" + c.labelPrevious + "</a>").attr("href", "#").addClass("btn btn-default pull-left");
//                 s = a("<a>" + c.labelFinish + "</a>").attr("href", "#").addClass("btn btn-primary pull-right");
//                 c.errorSteps && 0 < c.errorSteps.length && a.each(c.errorSteps, function(a, b) {
//                     y(b, !0)
//                 });
//                 p.append(e);
//                 k.append(n);
//                 b.append(p);
//                 b.append(k);
//                 c.includeFinishButton && k.append(s);
//                 k.append(q).append(r);
//                 z = p.width();
//                 a(q).click(function() {
//                     if (a(this).hasClass("disabled")) return !1;
//                     A();
//                     return !1
//                 });
//                 a(r).click(function() {
//                     if (a(this).hasClass("disabled")) return !1;
//                     B();
//                     return !1
//                 });
//                 a(s).click(function() {
//                     if (!a(this).hasClass("disabled"))
//                         if (a.isFunction(c.onFinish)) c.onFinish.call(this,
//                             a(f));
//                         else {
//                             var d = b.parents("form");
//                             d && d.length && d.submit()
//                         }
//                     return !1
//                 });
//                 a(f).bind("click", function(a) {
//                     if (f.index(this) == h) return !1;
//                     a = f.index(this);
//                     1 == f.eq(a).attr("isDone") - 0 && t(a);
//                     return !1
//                 });
//                 c.keyNavigation && a(document).keyup(function(a) {
//                     39 == a.which ? A() : 37 == a.which && B()
//                 });
//                 D();
//                 t(h)
//             }

//             function D() {
//                 c.enableAllSteps ? (a(f, b).removeClass("selected").removeClass("disabled").addClass("done"), a(f, b).attr("isDone", 1)) : (a(f, b).removeClass("selected").removeClass("done").addClass("disabled"), a(f, b).attr("isDone",
//                     0));
//                 a(f, b).each(function(e) {
//                     a(a(this).attr("href"), b).hide();
//                     a(this).attr("rel", e + 1)
//                 })
//             }

//             function t(e) {
//                 var d = f.eq(e),
//                     g = c.contentURL,
//                     h = d.data("hasContent");
//                 stepNum = e + 1;
//                 g && 0 < g.length ? c.contentCache && h ? w(e) : a.ajax({
//                     url: g,
//                     type: "POST",
//                     data: {
//                         step_number: stepNum
//                     },
//                     dataType: "text",
//                     beforeSend: function() {
//                         n.show()
//                     },
//                     error: function() {
//                         n.hide()
//                     },
//                     success: function(c) {
//                         n.hide();
//                         c && 0 < c.length && (d.data("hasContent", !0), a(a(d, b).attr("href"), b).html(c), w(e))
//                     }
//                 }) : w(e)
//             }

//             function w(e) {
//                 var d = f.eq(e),
//                     g = f.eq(h);
//                 if (e != h && a.isFunction(c.onLeaveStep) &&
//                     !c.onLeaveStep.call(this, a(g))) return !1;
//                 c.updateHeight && p.height(a(a(d, b).attr("href"), b).outerHeight());
//                 if ("slide" == c.transitionEffect) a(a(g, b).attr("href"), b).slideUp("fast", function(c) {
//                     a(a(d, b).attr("href"), b).slideDown("fast");
//                     h = e;
//                     u(g, d)
//                 });
//                 else if ("fade" == c.transitionEffect) a(a(g, b).attr("href"), b).fadeOut("fast", function(c) {
//                     a(a(d, b).attr("href"), b).fadeIn("fast");
//                     h = e;
//                     u(g, d)
//                 });
//                 else if ("slideleft" == c.transitionEffect) {
//                     var k = 0;
//                     e > h ? (nextElmLeft1 = z + 10, nextElmLeft2 = 0, k = 0 - a(a(g, b).attr("href"), b).outerWidth()) :
//                         (nextElmLeft1 = 0 - a(a(d, b).attr("href"), b).outerWidth() + 20, nextElmLeft2 = 0, k = 10 + a(a(g, b).attr("href"), b).outerWidth());
//                     e == h ? (nextElmLeft1 = a(a(d, b).attr("href"), b).outerWidth() + 20, nextElmLeft2 = 0, k = 0 - a(a(g, b).attr("href"), b).outerWidth()) : a(a(g, b).attr("href"), b).animate({
//                         left: k
//                     }, "fast", function(e) {
//                         a(a(g, b).attr("href"), b).hide()
//                     });
//                     a(a(d, b).attr("href"), b).css("left", nextElmLeft1);
//                     a(a(d, b).attr("href"), b).show();
//                     a(a(d, b).attr("href"), b).animate({
//                         left: nextElmLeft2
//                     }, "fast", function(a) {
//                         h = e;
//                         u(g, d)
//                     })
//                 } else a(a(g,
//                     b).attr("href"), b).hide(), a(a(d, b).attr("href"), b).show(), h = e, u(g, d);
//                 return !0
//             }

//             function u(e, d) {
//                 a(e, b).removeClass("selected");
//                 a(e, b).addClass("done");
//                 a(d, b).removeClass("disabled");
//                 a(d, b).removeClass("done");
//                 a(d, b).addClass("selected");
//                 a(d, b).attr("isDone", 1);
//                 c.cycleSteps || (0 >= h ? a(r).addClass("disabled") : a(r).removeClass("disabled"), f.length - 1 <= h ? a(q).addClass("disabled") : a(q).removeClass("disabled"));
//                 !f.hasClass("disabled") || c.enableFinishButton ? a(s).removeClass("disabled") :
//                     a(s).addClass("disabled");
//                 if (a.isFunction(c.onShowStep) && !c.onShowStep.call(this, a(d))) return !1
//             }

//             function A() {
//                 var a = h + 1;
//                 if (f.length <= a) {
//                     if (!c.cycleSteps) return !1;
//                     a = 0
//                 }
//                 t(a)
//             }

//             function B() {
//                 var a = h - 1;
//                 if (0 > a) {
//                     if (!c.cycleSteps) return !1;
//                     a = f.length - 1
//                 }
//                 t(a)
//             }

//             function E(b) {
//                 a(".content", l).html(b);
//                 l.show()
//             }

//             function y(c, d) {
//                 d ? a(f.eq(c - 1), b).addClass("error") : a(f.eq(c - 1), b).removeClass("error")
//             }
//             var b = a(this),
//                 h = c.selected,
//                 f = a("ul > li > a[href^='#step-']", b),
//                 z = 0,
//                 n, l, k, p, q, r, s;
//             k = a(".actionBar", b);
//             0 == k.length && (k =
//                 a("<div></div>").addClass("actionBar"));
//             l = a(".msgBox", b);
//             0 == l.length && (l = a('<div class="msgBox"><div class="content"></div><a href="#" class="close">X</a></div>'), k.append(l));
//             a(".close", l).click(function() {
//                 l.fadeOut("normal");
//                 return !1
//             });
//             if (m && "init" !== m && "object" !== typeof m) {
//                 if ("showMessage" === m) {
//                     var v = Array.prototype.slice.call(x, 1);
//                     E(v[0]);
//                     return !0
//                 }
//                 if ("setError" === m) return v = Array.prototype.slice.call(x, 1), y(v[0].stepnum, v[0].iserror), !0;
//                 a.error("Method " + m + " does not exist")
//             } else C()
//         })
//     };
//     a.fn.smartWizard.defaults = {
//         selected: 0,
//         keyNavigation: !0,
//         enableAllSteps: !1,
//         updateHeight: !0,
//         transitionEffect: "fade",
//         contentURL: null,
//         contentCache: !0,
//         cycleSteps: !1,
//         includeFinishButton: !0,
//         enableFinishButton: !1,
//         errorSteps: [],
//         labelNext: "Next",
//         labelPrevious: "Previous",
//         labelFinish: "Finish",
//         onLeaveStep: null,
//         onShowStep: null,
//         onFinish: null
//     }
// })(jQuery);
